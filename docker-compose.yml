version: '3.9'
services:
  nginx:
    image: 'nginx:1.21.4-alpine'
    init: true
    networks:
      - external
      - php
    ports:
      - '80:80'
    restart: on-failure
    volumes:
      - './:/var/www/html:cached'
      - './scripts/nginx/conf.d/:/etc/nginx/conf.d/:cached'
  pgsql:
    environment:
      - 'POSTGRES_DB=${DB_DATABASE}'
      - 'POSTGRES_PASSWORD=${DB_PASSWORD}'
      - 'POSTGRES_USER=${DB_USERNAME}'
    image: 'postgres:14.1-alpine'
    init: true
    networks:
      - database
    volumes:
      - 'db-data:/var/lib/postgresql/data'
  pgsql-testing:
    environment:
      - 'POSTGRES_DB=${DB_DATABASE}'
      - 'POSTGRES_PASSWORD=${DB_PASSWORD}'
      - 'POSTGRES_USER=${DB_USERNAME}'
    image: 'postgres:14.1-alpine'
    init: true
    networks:
      - database
  php:
    environment:
      - 'COMPARE_ENV_FILES=${COMPARE_ENV_FILES:-0}'
      - 'PHP_IDE_CONFIG=${PHP_IDE_CONFIG}'
    build:
        dockerfile: scripts/docker/Dockerfile
    init: true
    networks:
      - php
      - redis
      - database
    volumes:
      - '~/.composer:/tmp:delegated'
      - './:/var/www/html:delegated'
  redis:
    image: 'redis:6.2.6-alpine'
    init: true
    networks:
      - php
      - redis
networks:
  database:
  external:
  php:
  redis:
volumes:
  db-data:
