version: '3.9'
services:
  pgsql:
    environment:
      - 'POSTGRES_DB=${DB_DATABASE}'
      - 'POSTGRES_PASSWORD=${DB_PASSWORD}'
      - 'POSTGRES_USER=${DB_USERNAME}'
    image: 'postgres:14.1-alpine'
    init: true
    ports:
      - '5432:5432'
    networks:
      - database
    volumes:
      - 'db-data:/var/lib/postgresql/data'

#  pgsql-testing:
#    environment:
#      - 'POSTGRES_DB=${DB_DATABASE}'
#      - 'POSTGRES_PASSWORD=${DB_PASSWORD}'
#      - 'POSTGRES_USER=${DB_USERNAME}'
#    image: 'postgres:14.1-alpine'
#    init: true
#    networks:
#      - database

  php:
    environment:
      - 'COMPARE_ENV_FILES=${COMPARE_ENV_FILES:-0}'
      - 'PHP_IDE_CONFIG=${PHP_IDE_CONFIG}'
    build:
      dockerfile: scripts/docker/Dockerfile
    image: cycletime/web:1.0.2
    init: true
    networks:
      - php
      - redis
      - database
    volumes:
      - '~/.composer:/tmp:delegated'
      - './:/var/www/html:delegated'

#  test:
#    env_file: ".env.ci"
#    environment:
#      - 'COMPARE_ENV_FILES=${COMPARE_ENV_FILES:-0}'
#      - 'PHP_IDE_CONFIG=${PHP_IDE_CONFIG}'
#      - 'APP_ENV=testing'
#    build:
#      dockerfile: scripts/docker/Dockerfile
#    image: cycletime/web:1.0.2
#    init: true
#    networks:
#      - php
#      - redis
#      - database
#    volumes:
#      - '~/.composer:/tmp:delegated'
#      - './:/var/www/html:delegated'
#    command: ["./vendor/bin/phpunit"]

  worker:
    build:
      dockerfile: scripts/docker/Dockerfile
    image: cycletime/worker:1.0.2
    init: true
    networks:
      - php
      - redis
      - database
    volumes:
      - '~/.composer:/tmp:delegated'
      - './:/var/www/html:delegated'
    command: [ "php", "artisan", "queue:work" ]
    restart: unless-stopped

  redis:
    image: 'redis:6.2.6-alpine'
    init: true
    networks:
      - php
      - redis
networks:
  database:
  php:
  redis:
volumes:
  db-data:
